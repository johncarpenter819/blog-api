// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  password String
  posts Post[]
  comments Comment[]
  createdAt DateTime @default(now())
  role String @default("user")
  reactions Reaction[]
}

model Post{
  id Int @id @default(autoincrement())
  title String
  content String
  published Boolean @default(false)
  authorId Int
  author User @relation(fields: [authorId], references: [id])
  comments Comment[]
  createdAt DateTime @default(now())
  reactions Reaction[]
}

model Comment{
  id Int @id @default(autoincrement())
  content String
  username String
  postId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId Int?
  user User? @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Reaction{
  id Int @id @default(autoincrement())
  type String
  user User @relation(fields: [userId], references: [id])
  userId Int 
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, postId])
}
